{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAA4B;;AAE5B;AACAA,oDAAa,CAAC,CAAC;AAEf,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAEC,aAAoB,IAAI,CAAa;EAC1CE,IAAI,EAAEF,OAAO,CAACD,GAAG,CAACI,IAAI,IAAI,IAAI;EAC9BC,SAAS,EAAEJ,OAAO,CAACD,GAAG,CAACM,UAAU,IAAI,iBAAiB;EACtDC,QAAQ,EAAEN,OAAO,CAACD,GAAG,CAACQ,WAAW,IAC/BP,OAAO,CAACD,GAAG,CAACS,UAAU,IACtB,aAAaR,OAAO,CAACD,GAAG,CAACU,EAAE,IAAI,WAAW,IAAIT,OAAO,CAACD,GAAG,CAACW,UAAU,IAAI,OAAO;AACnF,CAAC;AAED,iEAAeZ,MAAM;;;;;;;;;;ACdrB;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN8B;AACU,CAAC;;AAEzC,MAAMc,GAAG,GAAGD,8CAAO,CAAC,CAAC;AACrB,MAAMR,IAAI,GAAGL,yDAAM,CAACI,IAAI;AAExBU,GAAG,CAACC,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvBA,GAAG,CAACC,IAAI,CAAC,gBAAgB,CAAC;AAC9B,CAAC,CAAC;AAEFJ,GAAG,CAACK,MAAM,CAACd,IAAI,EAAE,MAAM;EACnBe,OAAO,CAACC,GAAG,CAAC,yCAAyChB,IAAI,EAAE,CAAC;AAChE,CAAC,CAAC,C","sources":["webpack://mern-skeleton/./config/config.js","webpack://mern-skeleton/external commonjs \"dotenv\"","webpack://mern-skeleton/external commonjs \"express\"","webpack://mern-skeleton/webpack/bootstrap","webpack://mern-skeleton/webpack/runtime/compat get default export","webpack://mern-skeleton/webpack/runtime/define property getters","webpack://mern-skeleton/webpack/runtime/hasOwnProperty shorthand","webpack://mern-skeleton/webpack/runtime/make namespace object","webpack://mern-skeleton/./template.js"],"sourcesContent":["import dotenv from 'dotenv';\r\n\r\n// Load environment variables from a .env file if available\r\ndotenv.config();\r\n\r\nconst config = {\r\n  env: process.env.NODE_ENV || 'development',\r\n  port: process.env.PORT || 3000,\r\n  jwtSecret: process.env.JWT_SECRET || \"YOUR_secret_key\",\r\n  mongoUri: process.env.MONGODB_URI ||\r\n    process.env.MONGO_HOST ||\r\n    `mongodb://${process.env.IP || 'localhost'}:${process.env.MONGO_PORT || '27017'}/mernproject`\r\n};\r\n\r\nexport default config;\r\n","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\r\nimport config from './config/config.js'; // Adjust path if needed\r\n\r\nconst app = express();\r\nconst PORT = config.port;\r\n\r\napp.get('/', (req, res) => {\r\n    res.send('Hello Darling!');\r\n});\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`Server is running on http://localhost:${PORT}`);\r\n});\r\n"],"names":["dotenv","config","env","process","NODE_ENV","port","PORT","jwtSecret","JWT_SECRET","mongoUri","MONGODB_URI","MONGO_HOST","IP","MONGO_PORT","express","app","get","req","res","send","listen","console","log"],"sourceRoot":""}